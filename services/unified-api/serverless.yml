# Unified API Gateway Configuration
service: namecard-unified-api-${self:custom.stage}
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  stage: ${opt:stage, 'staging'}
  profile: namecard-staging
  timeout: 30
  memorySize: 512
  logRetentionInDays: ${self:custom.logRetention.${self:custom.stage}, 7}
  environment:
    NODE_ENV: production
    STAGE: ${self:custom.stage}
    LOG_LEVEL: ${self:custom.logLevel.${self:custom.stage}, 'debug'}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    AWS_REGION: ${self:provider.region}

    AUTH_SERVICE_URL: ${ssm:/namecard/${self:custom.stage}/auth-service-url, 'https://rai2raecji.execute-api.ap-southeast-1.amazonaws.com/staging'}
    CARDS_SERVICE_URL: ${ssm:/namecard/${self:custom.stage}/cards-service-url, 'https://v7h0gz3ozi.execute-api.ap-southeast-1.amazonaws.com/staging'}
    UPLOAD_SERVICE_URL: ${ssm:/namecard/${self:custom.stage}/upload-service-url, 'https://gk5ezv6x2j.execute-api.ap-southeast-1.amazonaws.com/staging'}

custom:
  stage: ${opt:stage, 'staging'}
  logLevel:
    production: info
    staging: debug
    development: debug
    local: debug
  logRetention:
    production: 30
    staging: 7
    development: 7
    local: 7
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    target: node18
    platform: node
    external:
      - aws-sdk
    keepOutputDirectory: false
    packager: npm
    concurrency: 3
    define:
      'process.env.NODE_ENV': '"production"'

functions:
  health:
    handler: handlers/health.handler
    description: Unified API service health check
    events:
      - http:
          path: health
          method: get
          cors: true

  authHealth:
    handler: handlers/proxy.authHealth
    description: Auth service health check proxy
    events:
      - http:
          path: auth/health
          method: get
          cors: true

  authRegister:
    handler: handlers/proxy.authRegister
    description: User registration proxy
    events:
      - http:
          path: auth/register
          method: post
          cors: true

  authLogin:
    handler: handlers/proxy.authLogin
    description: User login proxy
    events:
      - http:
          path: auth/login
          method: post
          cors: true

  cardsHealth:
    handler: handlers/proxy.cardsHealth
    description: Cards service health check proxy
    events:
      - http:
          path: cards/health
          method: get
          cors: true

  cardsGet:
    handler: handlers/proxy.cardsGet
    description: Get cards proxy
    events:
      - http:
          path: cards
          method: get
          cors: true

  cardsCreate:
    handler: handlers/proxy.cardsCreate
    description: Create card proxy
    events:
      - http:
          path: cards
          method: post
          cors: true

  uploadHealth:
    handler: handlers/proxy.uploadHealth
    description: Upload service health check proxy
    events:
      - http:
          path: upload/health
          method: get
          cors: true

  uploadSingle:
    handler: handlers/proxy.uploadSingle
    description: Upload single file proxy
    events:
      - http:
          path: upload/single
          method: post
          cors: true

plugins:
  - serverless-esbuild
  - ../../serverless-offline.cjs

resources:
  Resources:
    UnifiedApiLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/namecard-unified-api-${self:custom.stage}
        RetentionInDays: ${self:custom.logRetention.${self:custom.stage}, 7}

  Outputs:
    UnifiedApiUrl:
      Description: Unified API Gateway URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - ${self:provider.region}
            - ".amazonaws.com/"
            - ${self:custom.stage}
      Export:
        Name: ${self:service}-url

    UnifiedApiServiceName:
      Description: Unified API service name
      Value: ${self:service}
      Export:
        Name: ${self:service}-name

package:
  individually: true
  patterns:
    - '!**/*.ts'
    - '!**/.git/**'
    - '!**/test/**'
    - '!**/scripts/**'
