# Enrichment Service Configuration
service: namecard-enrichment
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  stage: ${opt:stage, 'dev'}
  timeout: 180 # 3 minutes for enrichment processing
  environment:
    NODE_ENV: ${self:provider.stage}
    STAGE: ${self:provider.stage}
    
    # Database
    DATABASE_URL: ${ssm:/namecard/${self:provider.stage}/database-url}
    
    # Perplexity AI Configuration
    PERPLEXITY_API_KEY: ${ssm:/namecard/${self:provider.stage}/perplexity-api-key~true}
    PERPLEXITY_BASE_URL: ${ssm:/namecard/${self:provider.stage}/perplexity-base-url, 'https://api.perplexity.ai'}
    PERPLEXITY_RATE_LIMIT_RPM: ${ssm:/namecard/${self:provider.stage}/perplexity-rate-limit-rpm, '60'}
    PERPLEXITY_RATE_LIMIT_RPD: ${ssm:/namecard/${self:provider.stage}/perplexity-rate-limit-rpd, '1000'}
    PERPLEXITY_TIMEOUT: ${ssm:/namecard/${self:provider.stage}/perplexity-timeout, '30000'}
    PERPLEXITY_MAX_RETRIES: ${ssm:/namecard/${self:provider.stage}/perplexity-max-retries, '2'}
    PERPLEXITY_BACKOFF_MS: ${ssm:/namecard/${self:provider.stage}/perplexity-backoff-ms, '3000'}
    
    # Enrichment Configuration
    ENRICHMENT_ENABLED_SOURCES: ${ssm:/namecard/${self:provider.stage}/enrichment-enabled-sources, 'perplexity'}
    PERPLEXITY_ENABLED: ${ssm:/namecard/${self:provider.stage}/perplexity-enabled, 'true'}
    PERPLEXITY_WEIGHT: ${ssm:/namecard/${self:provider.stage}/perplexity-weight, '0.9'}
    PERPLEXITY_TRUST_LEVEL: ${ssm:/namecard/${self:provider.stage}/perplexity-trust-level, '88'}

  iamRoleStatements:
    # RDS Proxy permissions
    - Effect: Allow
      Action:
        - rds-db:connect
      Resource:
        - arn:aws:rds-db:${self:provider.region}:${aws:accountId}:dbuser:*/namecard-lambda-user
    
    # SQS permissions
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:SendMessage
        - sqs:GetQueueAttributes
      Resource:
        - arn:aws:sqs:${self:provider.region}:${aws:accountId}:namecard-enrichment-queue-${self:provider.stage}
    
    # SNS permissions for notifications
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - arn:aws:sns:${self:provider.region}:${aws:accountId}:namecard-enrichment-complete-${self:provider.stage}
    
    # SSM Parameter Store permissions
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
      Resource:
        - arn:aws:ssm:${self:provider.region}:${aws:accountId}:parameter/namecard/${self:provider.stage}/*

functions:
  enrich-card:
    handler: handlers/enrich-card.handler
    description: Enrich business card with company information
    events:
      - http:
          path: enrich
          method: post
          cors: true
    memorySize: 512

  perplexity-lookup:
    handler: handlers/perplexity-lookup.handler
    description: Lookup company information via Perplexity AI
    events:
      - http:
          path: perplexity-lookup
          method: post
          cors: true
    memorySize: 512

  batch-process:
    handler: handlers/batch-process.handler
    description: Process enrichment from SQS queue (async)
    events:
      - sqs:
          arn: arn:aws:sqs:${self:provider.region}:${aws:accountId}:namecard-enrichment-queue-${self:provider.stage}
          batchSize: 1
          maximumBatchingWindowInSeconds: 10
    memorySize: 512
    reservedConcurrency: 3

  refresh-enrichment:
    handler: handlers/refresh-enrichment.handler
    description: Refresh enrichment data for existing cards
    events:
      - http:
          path: refresh
          method: post
          cors: true
    memorySize: 512

plugins:
  - serverless-webpack
  
custom:
  webpack:
    webpackConfig: '../../webpack.config.js'
    includeModules: true