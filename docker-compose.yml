version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: namecard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: namecard_dev
      POSTGRES_USER: namecard_user
      POSTGRES_PASSWORD: namecard_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - namecard_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U namecard_user -d namecard_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_test:
    image: postgres:15-alpine
    container_name: namecard-postgres-test
    restart: unless-stopped
    environment:
      POSTGRES_DB: namecard_test
      POSTGRES_USER: namecard_user
      POSTGRES_PASSWORD: namecard_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - namecard_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U namecard_user -d namecard_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: namecard-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - namecard_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
    container_name: namecard-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    command: >
      sh -c "node packages/api/dist/server.js"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - API_VERSION=v1
      - DATABASE_URL=postgresql://namecard_user:namecard_password@postgres:5432/namecard_dev
      - DATABASE_URL_TEST=postgresql://namecard_user:namecard_password@postgres_test:5432/namecard_test
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=docker-dev-jwt-secret-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - JWT_REFRESH_EXPIRES_IN=30d
      - AWS_REGION=us-east-1
      - S3_BUCKET_NAME=namecard-images-dev
      - S3_REGION=us-east-1
      - COGNITO_USER_POOL_ID=docker-dev-pool
      - COGNITO_CLIENT_ID=docker-dev-client
      - COGNITO_REGION=us-east-1
      - TEXTRACT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=docker-dev-key
      - AWS_SECRET_ACCESS_KEY=docker-dev-secret
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGIN=http://localhost:5173
      - LOG_LEVEL=info
      - MAX_FILE_SIZE=10485760
      - ALLOWED_FILE_TYPES=image/jpeg,image/png,image/heic,image/webp
    networks:
      - namecard_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  redis_data:
    driver: local

networks:
  namecard_network:
    driver: bridge